{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/scripts/changeCellClass.js","src/scripts/addNewNumber.js","src/scripts/handleAction.js","src/scripts/isTurnPossible.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $55bedde7795f8311$exports = {};\n\"use strict\";\nvar $55bedde7795f8311$var$changeCellClass = function(cell) {\n    if (cell.textContent) {\n        if (cell.classList.length > 1) cell.classList.replace(cell.classList[1], \"field-cell--\".concat(cell.textContent));\n        else cell.classList.add(\"field-cell--\".concat(cell.textContent));\n    } else cell.classList.remove(cell.classList[1]);\n};\n$55bedde7795f8311$exports = {\n    changeCellClass: $55bedde7795f8311$var$changeCellClass\n};\n\n\nvar $197cd56b15c33885$require$changeCellClass = $55bedde7795f8311$exports.changeCellClass;\nvar $8e5b4717545ccf7a$exports = {};\n\"use strict\";\n\nvar $8e5b4717545ccf7a$require$changeCellClass = $55bedde7795f8311$exports.changeCellClass;\nvar $8e5b4717545ccf7a$var$addNewNumber = function(cells) {\n    var emptyCells = cells.filter(function(cell) {\n        return !cell.textContent;\n    });\n    var cellValue = Math.random() < 0.1 ? \"4\" : \"2\";\n    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n    emptyCells[randomIndex].textContent = cellValue;\n    $8e5b4717545ccf7a$require$changeCellClass(emptyCells[randomIndex]);\n};\n$8e5b4717545ccf7a$exports = {\n    addNewNumber: $8e5b4717545ccf7a$var$addNewNumber\n};\n\n\nvar $197cd56b15c33885$require$addNewNumber = $8e5b4717545ccf7a$exports.addNewNumber;\nvar $f4924c3c1d6daffd$exports = {};\n\"use strict\";\nvar $f4924c3c1d6daffd$var$handleAction = function(actionKey, field, gameScore) {\n    var addedScore = 0;\n    switch(actionKey){\n        case \"ArrowUp\":\n            for(var row = 0; row < field.length; row++)for(var col = 0; col < field[row].length; col++){\n                var currentCell = field[row][col];\n                for(var i = row + 1; i < field.length; i++){\n                    var comparedCell = field[i][col];\n                    if (comparedCell.textContent) {\n                        if (!currentCell.textContent) {\n                            currentCell.textContent = comparedCell.textContent;\n                            comparedCell.textContent = \"\";\n                        } else if (currentCell.textContent === comparedCell.textContent) {\n                            addedScore += +currentCell.textContent * 2;\n                            currentCell.textContent = \"\".concat(+currentCell.textContent + +comparedCell.textContent);\n                            comparedCell.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        case \"ArrowDown\":\n            for(var row1 = field.length - 1; row1 >= 0; row1--)for(var col1 = 0; col1 < field[row1].length; col1++){\n                var currentCell1 = field[row1][col1];\n                for(var i1 = row1 - 1; i1 >= 0; i1--){\n                    var comparedCell1 = field[i1][col1];\n                    if (comparedCell1.textContent) {\n                        if (!currentCell1.textContent) {\n                            currentCell1.textContent = comparedCell1.textContent;\n                            comparedCell1.textContent = \"\";\n                        } else if (currentCell1.textContent === comparedCell1.textContent) {\n                            addedScore += +currentCell1.textContent * 2;\n                            currentCell1.textContent = \"\".concat(+currentCell1.textContent + +comparedCell1.textContent);\n                            comparedCell1.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        case \"ArrowLeft\":\n            for(var col2 = 0; col2 < field.length; col2++)for(var row2 = 0; row2 < field.length; row2++){\n                var currentCell2 = field[row2][col2];\n                for(var i2 = col2 + 1; i2 < field.length; i2++){\n                    var comparedCell2 = field[row2][i2];\n                    if (comparedCell2.textContent) {\n                        if (!currentCell2.textContent) {\n                            currentCell2.textContent = comparedCell2.textContent;\n                            comparedCell2.textContent = \"\";\n                        } else if (currentCell2.textContent === comparedCell2.textContent) {\n                            addedScore += +currentCell2.textContent * 2;\n                            currentCell2.textContent = \"\".concat(+currentCell2.textContent + +comparedCell2.textContent);\n                            comparedCell2.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        case \"ArrowRight\":\n            for(var col3 = field.length - 1; col3 >= 0; col3--)for(var row3 = 0; row3 < field.length; row3++){\n                var currentCell3 = field[row3][col3];\n                for(var i3 = col3 - 1; i3 >= 0; i3--){\n                    var comparedCell3 = field[row3][i3];\n                    if (comparedCell3.textContent) {\n                        if (!currentCell3.textContent) {\n                            currentCell3.textContent = comparedCell3.textContent;\n                            comparedCell3.textContent = \"\";\n                        } else if (currentCell3.textContent === comparedCell3.textContent) {\n                            addedScore += +currentCell3.textContent * 2;\n                            currentCell3.textContent = \"\".concat(+currentCell3.textContent + +comparedCell3.textContent);\n                            comparedCell3.textContent = \"\";\n                            break;\n                        } else break;\n                    }\n                }\n            }\n            break;\n        default:\n            break;\n    }\n    gameScore.textContent = \"\".concat(+gameScore.textContent + addedScore);\n};\n$f4924c3c1d6daffd$exports = {\n    handleAction: $f4924c3c1d6daffd$var$handleAction\n};\n\n\nvar $197cd56b15c33885$require$handleAction = $f4924c3c1d6daffd$exports.handleAction;\nvar $e8bae1641265bb7b$exports = {};\n\"use strict\";\nvar $e8bae1641265bb7b$var$isTurnPossible = function(field) {\n    for(var row = 0; row < field.length; row++)for(var col = 0; col < field.length; col++){\n        var currentCell = field[row][col];\n        if (currentCell.textContent === \"\") return true;\n    }\n    for(var row1 = 0; row1 < field.length; row1++)for(var col1 = 0; col1 < field.length; col1++){\n        var currentCellValue = field[row1][col1].textContent;\n        var comparedCell1Value = field[row1 + 1] ? field[row1 + 1][col1].textContent : null;\n        var comparedCell2Value = field[row1][col1 + 1] ? field[row1][col1 + 1].textContent : null;\n        if (currentCellValue === comparedCell1Value || currentCellValue === comparedCell2Value) return true;\n    }\n    return false;\n};\n$e8bae1641265bb7b$exports = {\n    isTurnPossible: $e8bae1641265bb7b$var$isTurnPossible\n};\n\n\nvar $197cd56b15c33885$require$isTurnPossible = $e8bae1641265bb7b$exports.isTurnPossible;\nvar $197cd56b15c33885$var$CONTROLS = [\n    \"ArrowUp\",\n    \"ArrowDown\",\n    \"ArrowLeft\",\n    \"ArrowRight\"\n];\nvar $197cd56b15c33885$var$mainButton = document.querySelector(\".button-main\");\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$fieldCells = document.querySelectorAll(\".field-cell\");\nvar $197cd56b15c33885$var$cells = Array.from($197cd56b15c33885$var$fieldCells);\nvar $197cd56b15c33885$var$field = [\n    $197cd56b15c33885$var$cells.slice(0, 4),\n    $197cd56b15c33885$var$cells.slice(4, 8),\n    $197cd56b15c33885$var$cells.slice(8, 12),\n    $197cd56b15c33885$var$cells.slice(12, 16)\n];\nvar $197cd56b15c33885$var$messages = {\n    start: document.querySelector(\".message-start\"),\n    win: document.querySelector(\".message-win\"),\n    lose: document.querySelector(\".message-lose\")\n};\nvar $197cd56b15c33885$var$isFirstMove = true;\nvar $197cd56b15c33885$var$game2048 = function(action) {\n    if ($197cd56b15c33885$var$CONTROLS.includes(action.key)) {\n        var previousTurn = $197cd56b15c33885$var$cells.map(function(cell) {\n            return cell.textContent;\n        });\n        $197cd56b15c33885$require$handleAction(action.key, $197cd56b15c33885$var$field, $197cd56b15c33885$var$gameScore);\n        $197cd56b15c33885$var$fieldCells.forEach(function(fieldCell) {\n            $197cd56b15c33885$require$changeCellClass(fieldCell);\n        });\n        var currentTurn = $197cd56b15c33885$var$cells.map(function(cell) {\n            return cell.textContent;\n        });\n        var isFieldChanged = currentTurn.toString() !== previousTurn.toString();\n        if (isFieldChanged) {\n            $197cd56b15c33885$require$addNewNumber($197cd56b15c33885$var$cells);\n            if ($197cd56b15c33885$var$isFirstMove) {\n                $197cd56b15c33885$var$mainButton.classList.replace(\"start\", \"restart\");\n                $197cd56b15c33885$var$mainButton.textContent = \"Restart\";\n                $197cd56b15c33885$var$isFirstMove = false;\n            }\n        }\n        if (currentTurn.some(function(cellValue) {\n            return cellValue === \"2048\";\n        })) {\n            $197cd56b15c33885$var$messages.win.classList.remove(\"hidden\");\n            document.removeEventListener(\"keydown\", $197cd56b15c33885$var$game2048);\n        } else if (!isFieldChanged) {\n            if (!$197cd56b15c33885$require$isTurnPossible($197cd56b15c33885$var$field)) {\n                $197cd56b15c33885$var$messages.lose.classList.remove(\"hidden\");\n                document.removeEventListener(\"keydown\", $197cd56b15c33885$var$game2048);\n            }\n        }\n    }\n};\n$197cd56b15c33885$var$mainButton.addEventListener(\"click\", function() {\n    document.removeEventListener(\"keydown\", $197cd56b15c33885$var$game2048);\n    $197cd56b15c33885$var$mainButton.classList.replace(\"restart\", \"start\");\n    $197cd56b15c33885$var$mainButton.textContent = \"Start\";\n    $197cd56b15c33885$var$isFirstMove = true;\n    $197cd56b15c33885$var$gameScore.textContent = \"0\";\n    $197cd56b15c33885$var$fieldCells.forEach(function(fieldCell) {\n        fieldCell.textContent = \"\";\n        $197cd56b15c33885$require$changeCellClass(fieldCell);\n    });\n    $197cd56b15c33885$require$addNewNumber($197cd56b15c33885$var$cells);\n    $197cd56b15c33885$require$addNewNumber($197cd56b15c33885$var$cells);\n    for(var gameEvent in $197cd56b15c33885$var$messages)if (!$197cd56b15c33885$var$messages[gameEvent].classList.contains(\"hidden\")) $197cd56b15c33885$var$messages[gameEvent].classList.add(\"hidden\");\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$game2048);\n});\n\n})();\n//# sourceMappingURL=index.c20989bb.js.map\n","'use strict';\n\nconst { changeCellClass } = require('./changeCellClass');\nconst { addNewNumber } = require('./addNewNumber');\nconst { handleAction } = require('./handleAction');\nconst { isTurnPossible } = require('./isTurnPossible');\n\nconst CONTROLS = [\n  'ArrowUp',\n  'ArrowDown',\n  'ArrowLeft',\n  'ArrowRight',\n];\n\nconst mainButton = document.querySelector('.button-main');\n\nconst gameScore = document.querySelector('.game-score');\n\nconst fieldCells = document.querySelectorAll('.field-cell');\nconst cells = Array.from(fieldCells);\n\nconst field = [\n  cells.slice(0, 4),\n  cells.slice(4, 8),\n  cells.slice(8, 12),\n  cells.slice(12, 16),\n];\n\nconst messages = {\n  start: document.querySelector('.message-start'),\n  win: document.querySelector('.message-win'),\n  lose: document.querySelector('.message-lose'),\n};\n\nlet isFirstMove = true;\n\nconst game2048 = (action) => {\n  if (CONTROLS.includes(action.key)) {\n    const previousTurn = cells.map(cell => cell.textContent);\n\n    handleAction(action.key, field, gameScore);\n\n    fieldCells.forEach((fieldCell) => {\n      changeCellClass(fieldCell);\n    });\n\n    const currentTurn = cells.map(cell => cell.textContent);\n\n    const isFieldChanged = currentTurn.toString() !== previousTurn.toString();\n\n    if (isFieldChanged) {\n      addNewNumber(cells);\n\n      if (isFirstMove) {\n        mainButton.classList.replace('start', 'restart');\n        mainButton.textContent = 'Restart';\n\n        isFirstMove = false;\n      }\n    }\n\n    if (currentTurn.some(cellValue => cellValue === '2048')) {\n      messages.win.classList.remove('hidden');\n      document.removeEventListener('keydown', game2048);\n    } else if (!isFieldChanged) {\n      if (!isTurnPossible(field)) {\n        messages.lose.classList.remove('hidden');\n        document.removeEventListener('keydown', game2048);\n      }\n    }\n  }\n};\n\nmainButton.addEventListener('click', () => {\n  document.removeEventListener('keydown', game2048);\n\n  mainButton.classList.replace('restart', 'start');\n  mainButton.textContent = 'Start';\n\n  isFirstMove = true;\n\n  gameScore.textContent = '0';\n\n  fieldCells.forEach((fieldCell) => {\n    fieldCell.textContent = '';\n    changeCellClass(fieldCell);\n  });\n\n  addNewNumber(cells);\n  addNewNumber(cells);\n\n  for (const gameEvent in messages) {\n    if (!messages[gameEvent].classList.contains('hidden')) {\n      messages[gameEvent].classList.add('hidden');\n    }\n  }\n\n  document.addEventListener('keydown', game2048);\n});\n","'use strict';\n\nconst changeCellClass = (cell) => {\n  if (cell.textContent) {\n    if (cell.classList.length > 1) {\n      cell.classList.replace(\n        cell.classList[1],\n        `field-cell--${cell.textContent}`,\n      );\n    } else {\n      cell.classList.add(`field-cell--${cell.textContent}`);\n    }\n  } else {\n    cell.classList.remove(cell.classList[1]);\n  }\n};\n\nmodule.exports = { changeCellClass };\n","'use strict';\n\nconst { changeCellClass } = require('./changeCellClass');\n\nconst addNewNumber = (cells) => {\n  const emptyCells = cells.filter(cell => !cell.textContent);\n  const cellValue = (Math.random() < 0.1) ? '4' : '2';\n  const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n  emptyCells[randomIndex].textContent = cellValue;\n  changeCellClass(emptyCells[randomIndex]);\n};\n\nmodule.exports = { addNewNumber };\n","'use strict';\n\nconst handleAction = (actionKey, field, gameScore) => {\n  let addedScore = 0;\n\n  switch (actionKey) {\n    case 'ArrowUp':\n      for (let row = 0; row < field.length; row++) {\n        for (let col = 0; col < field[row].length; col++) {\n          const currentCell = field[row][col];\n\n          for (let i = row + 1; i < field.length; i++) {\n            const comparedCell = field[i][col];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowDown':\n      for (let row = field.length - 1; row >= 0; row--) {\n        for (let col = 0; col < field[row].length; col++) {\n          const currentCell = field[row][col];\n\n          for (let i = row - 1; i >= 0; i--) {\n            const comparedCell = field[i][col];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowLeft':\n      for (let col = 0; col < field.length; col++) {\n        for (let row = 0; row < field.length; row++) {\n          const currentCell = field[row][col];\n\n          for (let i = col + 1; i < field.length; i++) {\n            const comparedCell = field[row][i];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    case 'ArrowRight':\n      for (let col = field.length - 1; col >= 0; col--) {\n        for (let row = 0; row < field.length; row++) {\n          const currentCell = field[row][col];\n\n          for (let i = col - 1; i >= 0; i--) {\n            const comparedCell = field[row][i];\n\n            if (comparedCell.textContent) {\n              if (!currentCell.textContent) {\n                currentCell.textContent = comparedCell.textContent;\n                comparedCell.textContent = '';\n              } else if (currentCell.textContent === comparedCell.textContent) {\n                addedScore += (+currentCell.textContent) * 2;\n\n                currentCell.textContent = `${+currentCell.textContent\n                + (+comparedCell.textContent)}`;\n                comparedCell.textContent = '';\n\n                break;\n              } else {\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      break;\n\n    default:\n      break;\n  }\n\n  gameScore.textContent = `${((+gameScore.textContent) + addedScore)}`;\n};\n\nmodule.exports = { handleAction };\n","'use strict';\n\nconst isTurnPossible = (field) => {\n  for (let row = 0; row < field.length; row++) {\n    for (let col = 0; col < field.length; col++) {\n      const currentCell = field[row][col];\n\n      if (currentCell.textContent === '') {\n        return true;\n      }\n    }\n  }\n\n  for (let row = 0; row < field.length; row++) {\n    for (let col = 0; col < field.length; col++) {\n      const currentCellValue = field[row][col].textContent;\n      const comparedCell1Value = field[row + 1]\n        ? field[row + 1][col].textContent\n        : null;\n      const comparedCell2Value = field[row][col + 1]\n        ? field[row][col + 1].textContent\n        : null;\n\n      if (currentCellValue === comparedCell1Value\n      || currentCellValue === comparedCell2Value) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nmodule.exports = { isTurnPossible };\n"],"names":["$55bedde7795f8311$exports","$197cd56b15c33885$require$changeCellClass","$8e5b4717545ccf7a$require$changeCellClass","$197cd56b15c33885$require$addNewNumber","$197cd56b15c33885$require$handleAction","$197cd56b15c33885$require$isTurnPossible","$197cd56b15c33885$var$CONTROLS","$197cd56b15c33885$var$mainButton","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$fieldCells","$197cd56b15c33885$var$cells","$197cd56b15c33885$var$field","$197cd56b15c33885$var$messages","$197cd56b15c33885$var$isFirstMove","$197cd56b15c33885$var$game2048","changeCellClass","cell","textContent","classList","length","replace","concat","add","remove","cells","emptyCells","filter","randomIndex","Math","floor","random","actionKey","field","gameScore","addedScore","row","col","currentCell","i","comparedCell","row1","col1","currentCell1","i1","comparedCell1","col2","row2","currentCell2","i2","comparedCell2","col3","row3","currentCell3","i3","comparedCell3","currentCellValue","comparedCell1Value","comparedCell2Value","document","querySelector","Array","from","querySelectorAll","slice","start","win","lose","action","includes","key","previousTurn","map","forEach","fieldCell","currentTurn","isFieldChanged","toString","some","cellValue","removeEventListener","addEventListener","gameEvent","contains"],"version":3,"file":"index.c20989bb.js.map"}